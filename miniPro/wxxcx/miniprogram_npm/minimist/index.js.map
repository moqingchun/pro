{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["module.exports = function (args, opts) {\r\n    if (!opts) opts = {};\r\n    \r\n    var flags = { bools : {}, strings : {}, unknownFn: null };\r\n\r\n    if (typeof opts['unknown'] === 'function') {\r\n        flags.unknownFn = opts['unknown'];\r\n    }\r\n\r\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\r\n      flags.allBools = true;\r\n    } else {\r\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\r\n          flags.bools[key] = true;\r\n      });\r\n    }\r\n    \r\n    var aliases = {};\r\n    Object.keys(opts.alias || {}).forEach(function (key) {\r\n        aliases[key] = [].concat(opts.alias[key]);\r\n        aliases[key].forEach(function (x) {\r\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\r\n                return x !== y;\r\n            }));\r\n        });\r\n    });\r\n\r\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\r\n        flags.strings[key] = true;\r\n        if (aliases[key]) {\r\n            flags.strings[aliases[key]] = true;\r\n        }\r\n     });\r\n\r\n    var defaults = opts['default'] || {};\r\n    \r\n    var argv = { _ : [] };\r\n    Object.keys(flags.bools).forEach(function (key) {\r\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\r\n    });\r\n    \r\n    var notFlags = [];\r\n\r\n    if (args.indexOf('--') !== -1) {\r\n        notFlags = args.slice(args.indexOf('--')+1);\r\n        args = args.slice(0, args.indexOf('--'));\r\n    }\r\n\r\n    function argDefined(key, arg) {\r\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\r\n            flags.strings[key] || flags.bools[key] || aliases[key];\r\n    }\r\n\r\n    function setArg (key, val, arg) {\r\n        if (arg && flags.unknownFn && !argDefined(key, arg)) {\r\n            if (flags.unknownFn(arg) === false) return;\r\n        }\r\n\r\n        var value = !flags.strings[key] && isNumber(val)\r\n            ? Number(val) : val\r\n        ;\r\n        setKey(argv, key.split('.'), value);\r\n        \r\n        (aliases[key] || []).forEach(function (x) {\r\n            setKey(argv, x.split('.'), value);\r\n        });\r\n    }\r\n\r\n    function setKey (obj, keys, value) {\r\n        var o = obj;\r\n        for (var i = 0; i < keys.length-1; i++) {\r\n            var key = keys[i];\r\n            if (key === '__proto__') return;\r\n            if (o[key] === undefined) o[key] = {};\r\n            if (o[key] === Object.prototype || o[key] === Number.prototype\r\n                || o[key] === String.prototype) o[key] = {};\r\n            if (o[key] === Array.prototype) o[key] = [];\r\n            o = o[key];\r\n        }\r\n\r\n        var key = keys[keys.length - 1];\r\n        if (key === '__proto__') return;\r\n        if (o === Object.prototype || o === Number.prototype\r\n            || o === String.prototype) o = {};\r\n        if (o === Array.prototype) o = [];\r\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\r\n            o[key] = value;\r\n        }\r\n        else if (Array.isArray(o[key])) {\r\n            o[key].push(value);\r\n        }\r\n        else {\r\n            o[key] = [ o[key], value ];\r\n        }\r\n    }\r\n    \r\n    function aliasIsBoolean(key) {\r\n      return aliases[key].some(function (x) {\r\n          return flags.bools[x];\r\n      });\r\n    }\r\n\r\n    for (var i = 0; i < args.length; i++) {\r\n        var arg = args[i];\r\n        \r\n        if (/^--.+=/.test(arg)) {\r\n            // Using [\\s\\S] instead of . because js doesn't support the\r\n            // 'dotall' regex modifier. See:\r\n            // http://stackoverflow.com/a/1068308/13216\r\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\r\n            var key = m[1];\r\n            var value = m[2];\r\n            if (flags.bools[key]) {\r\n                value = value !== 'false';\r\n            }\r\n            setArg(key, value, arg);\r\n        }\r\n        else if (/^--no-.+/.test(arg)) {\r\n            var key = arg.match(/^--no-(.+)/)[1];\r\n            setArg(key, false, arg);\r\n        }\r\n        else if (/^--.+/.test(arg)) {\r\n            var key = arg.match(/^--(.+)/)[1];\r\n            var next = args[i + 1];\r\n            if (next !== undefined && !/^-/.test(next)\r\n            && !flags.bools[key]\r\n            && !flags.allBools\r\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\r\n                setArg(key, next, arg);\r\n                i++;\r\n            }\r\n            else if (/^(true|false)$/.test(next)) {\r\n                setArg(key, next === 'true', arg);\r\n                i++;\r\n            }\r\n            else {\r\n                setArg(key, flags.strings[key] ? '' : true, arg);\r\n            }\r\n        }\r\n        else if (/^-[^-]+/.test(arg)) {\r\n            var letters = arg.slice(1,-1).split('');\r\n            \r\n            var broken = false;\r\n            for (var j = 0; j < letters.length; j++) {\r\n                var next = arg.slice(j+2);\r\n                \r\n                if (next === '-') {\r\n                    setArg(letters[j], next, arg)\r\n                    continue;\r\n                }\r\n                \r\n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\r\n                    setArg(letters[j], next.split('=')[1], arg);\r\n                    broken = true;\r\n                    break;\r\n                }\r\n                \r\n                if (/[A-Za-z]/.test(letters[j])\r\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\r\n                    setArg(letters[j], next, arg);\r\n                    broken = true;\r\n                    break;\r\n                }\r\n                \r\n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\r\n                    setArg(letters[j], arg.slice(j+2), arg);\r\n                    broken = true;\r\n                    break;\r\n                }\r\n                else {\r\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\r\n                }\r\n            }\r\n            \r\n            var key = arg.slice(-1)[0];\r\n            if (!broken && key !== '-') {\r\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\r\n                && !flags.bools[key]\r\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\r\n                    setArg(key, args[i+1], arg);\r\n                    i++;\r\n                }\r\n                else if (args[i+1] && /^(true|false)$/.test(args[i+1])) {\r\n                    setArg(key, args[i+1] === 'true', arg);\r\n                    i++;\r\n                }\r\n                else {\r\n                    setArg(key, flags.strings[key] ? '' : true, arg);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\r\n                argv._.push(\r\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\r\n                );\r\n            }\r\n            if (opts.stopEarly) {\r\n                argv._.push.apply(argv._, args.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    Object.keys(defaults).forEach(function (key) {\r\n        if (!hasKey(argv, key.split('.'))) {\r\n            setKey(argv, key.split('.'), defaults[key]);\r\n            \r\n            (aliases[key] || []).forEach(function (x) {\r\n                setKey(argv, x.split('.'), defaults[key]);\r\n            });\r\n        }\r\n    });\r\n    \r\n    if (opts['--']) {\r\n        argv['--'] = new Array();\r\n        notFlags.forEach(function(key) {\r\n            argv['--'].push(key);\r\n        });\r\n    }\r\n    else {\r\n        notFlags.forEach(function(key) {\r\n            argv._.push(key);\r\n        });\r\n    }\r\n\r\n    return argv;\r\n};\r\n\r\nfunction hasKey (obj, keys) {\r\n    var o = obj;\r\n    keys.slice(0,-1).forEach(function (key) {\r\n        o = (o[key] || {});\r\n    });\r\n\r\n    var key = keys[keys.length - 1];\r\n    return key in o;\r\n}\r\n\r\nfunction isNumber (x) {\r\n    if (typeof x === 'number') return true;\r\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\r\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\r\n}\r\n\r\n"]}